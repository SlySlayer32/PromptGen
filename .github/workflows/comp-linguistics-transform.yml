# GitHub Actions Workflow File
name: Computational Linguistics Transformer

on:
  workflow_dispatch:
    inputs:
      intensity:
        description: 'Transformation intensity (0.0-1.0)'
        required: true
        default: '0.7'
        type: string
      file_patterns:
        description: 'File patterns to include (comma-separated)'
        required: false
        default: '*.md,*.txt,*.rst'
        type: string
      output_method:
        description: 'Output method (in-place, pr, comment, artifact)'
        required: true
        default: 'artifact'
        type: choice
        options:
          - artifact
          - in-place
          - pr
          - comment
      custom_terminology:
        description: 'Path to custom terminology JSON file (paid tiers only)'
        required: false
        type: string

  pull_request:
    types: [opened, edited, synchronize]
    paths:
      - '**.md'
      - '**.txt'
      - '**.rst'

  push:
    branches:
      - main
      - 'docs/**'
    paths:
      - '**.md'
      - '**.txt'
      - '**.rst'

jobs:
  transform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Validate API token and check usage
        id: validate_token
        uses: ./.github/actions/validate-token-action
        with:
          api_token: ${{ secrets.COMP_LINGUISTICS_API_TOKEN }}
      
      - name: Check if token is valid
        if: steps.validate_token.outputs.valid != 'true'
        run: |
          echo "::error::Invalid or expired API token. Please visit https://comp-linguistics.io/pricing to obtain a valid token."
          exit 1
          
      - name: Check usage limits
        if: steps.validate_token.outputs.usage_limit_exceeded == 'true'
        run: |
          echo "::warning::Usage limit exceeded for your current plan (${{ steps.validate_token.outputs.tier }} tier)."
          echo "::warning::Please upgrade your plan at https://comp-linguistics.io/pricing or wait until your usage resets."
          exit 1
      
      - name: Determine event-specific parameters
        id: params
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "intensity=${{ github.event.inputs.intensity }}" >> $GITHUB_OUTPUT
            echo "file_patterns=${{ github.event.inputs.file_patterns }}" >> $GITHUB_OUTPUT
            echo "output_method=${{ github.event.inputs.output_method }}" >> $GITHUB_OUTPUT
            echo "custom_terminology=${{ github.event.inputs.custom_terminology }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "intensity=0.7" >> $GITHUB_OUTPUT
            echo "file_patterns=*.md,*.txt,*.rst" >> $GITHUB_OUTPUT
            echo "output_method=comment" >> $GITHUB_OUTPUT
            echo "custom_terminology=" >> $GITHUB_OUTPUT
          else
            echo "intensity=0.7" >> $GITHUB_OUTPUT
            echo "file_patterns=*.md,*.txt,*.rst" >> $GITHUB_OUTPUT
            echo "output_method=artifact" >> $GITHUB_OUTPUT
            echo "custom_terminology=" >> $GITHUB_OUTPUT
          fi
      
      - name: Transform content
        id: transform
        uses: ./.github/actions/transform-action
        with:
            intensity: ${{ steps.params.outputs.intensity }}
            file_patterns: ${{ steps.params.outputs.file_patterns }}
            output_method: ${{ steps.params.outputs.output_method }}
            custom_terminology: ${{ steps.params.outputs.custom_terminology }}
            api_token: ${{ secrets.COMP_LINGUISTICS_API_TOKEN }}
            tier_level: ${{ steps.validate_token.outputs.tier }}
            github_token: ${{ secrets.GITHUB_TOKEN }}
      
      # Handle output based on output_method
      - name: Upload artifacts (if artifact output mode)
        if: steps.params.outputs.output_method == 'artifact'
        uses: actions/upload-artifact@v3
        with:
          name: transformed-content
          path: ${{ steps.transform.outputs.output_dir }}
          
      - name: Create PR with changes (if PR output mode)
        if: steps.params.outputs.output_method == 'pr'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Apply computational linguistics style transformation'
          title: 'Style: Apply computational linguistics transformation'
          body: |
            This PR applies computational linguistics style transformations to documentation files.
            
            Transformation details:
            - Intensity: ${{ steps.params.outputs.intensity }}
            - Files affected: ${{ steps.transform.outputs.transformed_files }}
            - Generated by: Computational Linguistics Transformer Action
            
            ${{ steps.transform.outputs.transformation_report }}
          branch: comp-linguistics-transform
          
      - name: Report usage metrics
        if: always()
        uses: ./.github/actions/report-usage-action
        with:
            api_token: ${{ secrets.COMP_LINGUISTICS_API_TOKEN }}
            files_processed: ${{ steps.transform.outputs.processed_files }}
            words_transformed: ${{ steps.transform.outputs.transformed_words }}
            characters_transformed: ${{ steps.transform.outputs.transformed_chars }}